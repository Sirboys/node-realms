const host = "https://pc.realms.minecraft.net/"


const XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest;

class RealmsWorld{
    /**
     * @param {Object} parsedJSON
     */
    constructor(parsedJSON,token,username,version){
        this.token = token;
        this.username = username;
        this.version = version;

        this.id = parsedJSON.id;
        this.remoteSubscriptionId = parsedJSON.remoteSubscriptionId;
        this.owner = parsedJSON.owner;
        this.ownerUUID = parsedJSON.ownerUUID;
        this.name = parsedJSON.name;
        this.motd = parsedJSON.motd;
        this.defaultPermission = parsedJSON.defaultPermission;
        this.state = parsedJSON.state;
        this.daysLeft = parsedJSON.daysLeft;
        this.expired = parsedJSON.expired;
        this.expiredTrial = parsedJSON.expiredTrial;
        this.gracePeriod = parsedJSON.gracePeriod;
        this.worldType = parsedJSON.worldType;
        this.players = parsedJSON.players;
        this.maxPlayers = parsedJSON.maxPlayers;
        this.minigameName = parsedJSON.minigameName;
        this.minigameId = parsedJSON.minigameId;
        this.minigameImage = parsedJSON.minigameImage;
        this.activeSlot = parsedJSON.activeSlot;
        this.slots = parsedJSON.slots;
        this.member = parsedJSON.false;
        this.clubId = parsedJSON.clubId;
    }
    /**
     * @returns {PlayerInfo[]}
     */
    players(){
        var PlayersInfo = []
        JSON.parse(this.players).forEach(player => {
            PlayersInfo.push(player);
        });
        return PlayersInfo;
        
    }
    invitePlayer(playername){
        var request = new XMLHttpRequest();
        request.open("POST",host+"invites/"+this.id,false);
        request.setRequestHeader("Cookie","sid="+this.token+";user="+this.username+";version="+this.version);
        request.setRequestHeader("Content-Type","application/json");
        request.send('{"name":"'+playername+'"}');
        //console.log(request);
        if (request.status == 200){
            return new RealmsWorld(JSON.parse(request.responseText),this.token,this.username,this.version);
        }else{
            return false;
        }
    }
    /**
     * @returns {Object}
     */
    get createServer(){
        var request = new XMLHttpRequest();
        request.open("GET",host+"worlds/v1/"+this.id+"/join/pc",false);
        request.setRequestHeader("Cookie","sid="+this.token+";user="+this.username+";version="+this.version);
        request.setDisableHeaderCheck(true);
        request.send(null);
        if (request.status == 200){
            return JSON.parse(request.responseText);
        }else{
            return request;
        }
    }
    /**
     * @deprecated
     */
    activities(){
        //https://pc.realms.minecraft.net/activities/$WORLD_ID
        var request = new XMLHttpRequest();
        request.open("GET",host+"activities/"+this.id,false);
        request.setRequestHeader("Cookie","sid="+this.token+";user="+this.username+";version="+this.version);
        request.send(null);
        
        if (request.status == 200 || request.status == 204){
            return JSON.parse(request.responseText);
        }else{
            return request;
        }
    }
    backups(){
        var request = new XMLHttpRequest();
        request.open("GET",host+"worlds/"+this.id+"/backups",false);
        request.setRequestHeader("Cookie","sid="+this.token+";user="+this.username+";version="+this.version);
        request.send(null);
        if (request.status == 200){
            return JSON.parse(request.responseText);
        }else{
            return request;
        }

    }
    downloadWorld(){
        ///worlds/$ID/slot/$WORLD(1-4)/download
        var request = new XMLHttpRequest();
        request.open("GET",host+"worlds/"+this.id+"/slot/"+this.activeSlot+"/download",false);
        request.setRequestHeader("Cookie","sid="+this.token+";user="+this.username+";version="+this.version);
        request.send(null);
        if (request.status == 200){
            return JSON.parse(request.responseText);
        }else{
            return request;
        }
    }
    kickByUUID(uuid){
        var request = new XMLHttpRequest();
        request.open("DELETE",host+"invites/"+this.id+"/invite/"+uuid,false);
        request.setRequestHeader("Cookie","sid="+this.token+";user="+this.username+";version="+this.version);
        request.send(null);
        if (request.status == 200 || request.status == 204){
            return JSON.parse(request.responseText);
        }else{
            return request;
        }
    }
    getPlayerByUserName(name){
        return this.players.find(player => player.name == name);
    }
    startMinigame(id){
        //minigames/$MINIGAME_ID/$WORLD_ID
        var request = new XMLHttpRequest();
        request.open("PUT",host+"worlds/minigames/"+id+"/"+this.id,false);
        request.setRequestHeader("Cookie","sid="+this.token+";user="+this.username+";version="+this.version);
        request.send("");
        if (request.status == 200){
            return JSON.parse(request.responseText);
        }else{
            return request;
        }
    }
    /**
     * 
     * @param {Number} slotID 
     * @returns {Object}
     */
    changeSlot(slotID){
        var request = new XMLHttpRequest();
        request.open("PUT",host+"worlds/"+this.id+"/slot/"+slotID,false);
        request.setRequestHeader("Cookie","sid="+this.token+";user="+this.username+";version="+this.version);
        request.send("");
        if (request.status == 200){
            return JSON.parse(request.responseText);
        }else{
            return request;
        }
    }
    get detailedInformation(){
        var request = new XMLHttpRequest();
        request.open("GET",host+"worlds/"+this.id,false);
        request.setRequestHeader("Cookie","sid="+this.token+";user="+this.username+";version="+this.version);
        request.send(null);
        if (request.status == 200){
            return JSON.parse(request.responseText);
        }else{
            return request;
        }
    }
}
module.exports = RealmsWorld;